function Send-DuoPreAuth {
    <#
    .SYNOPSIS
    Duo Pre-Auth
    
    .DESCRIPTION
    The /preauth endpoint determines whether a user is authorized to log in, and (if so) returns the user's available authentication factors.
    
    .PARAMETER UserId
    Permanent, unique identifier for the user as generated by Duo upon user creation (e.g. DUYHV6TJBC3O4RITS1WC).
    
    .PARAMETER Username
    Unique identifier for the user that is commonly specified by your application during user creation (e.g. user@domain.com). This value may also represent a username alias assigned to a user
    
    .PARAMETER IpAddr
    The IP address of the user to be authenticated, in dotted quad format. This will cause an "allow" response to be sent if appropriate for requests from a trusted network.
    
    .PARAMETER Hostname
    The host name of the device accessing the application.
    
    .PARAMETER TrustedDeviceToken
    If the trusted_device_token is present and the Auth API application has an effective policy that enables Remembered Devices for each browser-based application, return an "allow" response for the lifetime of the token as set by the Duo administrator in the policy.
    
    .EXAMPLE
    Send-DuoPreAuth -Username pgibbons

    .LINK
    https://duo.com/docs/authapi#/preauth
    
    .NOTES
    Exactly one of user_id or username must be specified.
    #>
    [CmdletBinding(DefaultParameterSetName = 'Username')]
    Param(
        [Parameter(Mandatory = $true, ParameterSetName = 'UserId')]
        [Alias('user_id')]
        [string]$UserId,

        [Parameter(Mandatory = $true, ParameterSetName = 'Username')]
        [string]$Username,

        [Parameter()]
        [string]$IpAddr,

        [Parameter()]
        [string]$Hostname,

        [Parameter()]
        [string]$TrustedDeviceToken
    )

    process { 
        $Params = @{}
        if ($UserId) { $Params.user_id = $UserId }
        if ($Username) { $Params.username = $Username }
        if ($IpAddr) { $Params.ipaddr = $IpAddr }
        if ($Hostname) { $Params.hostname = $Hostname }
        if ($TrustedDeviceToken) { $Params.trusted_device_token = $TrustedDeviceToken }
        
        $DuoRequest = @{
            Method = 'POST'
            Path   = '/auth/v2/preauth'
            Params = $Params
        }

        $Response = Invoke-DuoRequest @DuoRequest
        if ($Response.stat -eq 'OK') {
            $Response.response
        }
        else { 
            $Response
        }
    }
}
